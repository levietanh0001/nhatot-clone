@use "sass:math";

$breakpoints: (
  "xs": 0,
  "sm": 576px,
  "md": 768px,
  "lg": 992px,
  "xl": 1200px,
  "xxl": 1400px,
);


@mixin xs {
  @media (min-width: map-get($breakpoints, "xs")) {
    @content;
  }
}

@mixin sm {
  @media (min-width: map-get($breakpoints, "sm")) {
    @content;
  }
}

@mixin md {
  @media (min-width: map-get($breakpoints, "md")) {
    @content;
  }
}

@mixin lg {
  @media (min-width: map-get($breakpoints, "lg")) {
    @content;
  }
}

@mixin xl {
  @media (min-width: map-get($breakpoints, "xl")) {
    @content;
  }
}

@mixin screenMinWidth($min-width: 0) {
  @if (map-has-key($map: $breakpoints, $key: $min-width)) {
    @media (min-width: map-get($breakpoints, $min-width)) {
      @content;
    }
  } @else {
    @media (min-width: $min-width) {
      @content;
    }
  }
}

@mixin screenMaxWidth($max-width: 0) {
  @if (map-has-key($map: $breakpoints, $key: $max-width)) {
    @media (max-width: map-get($breakpoints, $max-width)) {
      @content;
    }
  } @else {
    @media (max-width: $max-width) {
      @content;
    }
  }
}

@mixin screenWidthRange($min-width: 0, $max-width: 100vw) {
  @if (
    map-has-key($map: $breakpoints, $key: $max-width) and
      map-has-key($map: $breakpoints, $key: $max-width)
  ) {
    @media (min-width: map-get($breakpoints, $min-width)) and (max-width: map-get($breakpoints, $max-width)) {
      @content;
    }
  } @else {
    @media (min-width: $min-width) and (max-width: $max-width) {
      @content;
    }
  }
}


// base layout
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
  box-sizing: border-box;
}


.row {
  display: flex;
  flex-flow: row wrap;
}

