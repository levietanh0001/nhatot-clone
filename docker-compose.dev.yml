version: "3.8"
services:
  # nginx:
  #   image: nginx:alpine
  #   container_name: nginx
  #   restart: always
  #   ports:
  #     - "80:80"
  #     # - "80:4000"
  #     - "443:443"
  #   command: nginx -g "daemon off;"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/conf.d:/etc/nginx/conf.d
  #     - ./nginx/hosts:/etc/hosts
  #     - ./frontend/build:/var/www/html

  mysql: # shell into container: docker exec -it af1046f4563b bash
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - global_mysql-data:/var/lib/mysql
      - mysql-initdb:/docker-entrypoint-initdb.d/init.sql

  mongo:
    image: mongo:6.0
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - global_mongo-data:/data/db
      - mongo-conf:/etc/mongo
      - mongo-configdb:/data/configdb

  redis:
    image: redis:7.0-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASS=${REDIS_PASS}
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASS}
    volumes:
      - backend_redis-data:/data

  backend:
    image: williamle0001/nhatot-clone:nhatot-backend
    container_name: nhatot-backend
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: npm run prod
    ports:
      - "4000:4000"
    depends_on:
      # - nginx
      - mysql
      - redis
      - mongo
      
  frontend:
    container_name: nhatot-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
        

volumes:
  global_mysql-data:
    external: true
  global_mongo-data:
    external: true
  backend_redis-data:
    external: true
  # mysql-data:
  mysql-initdb:
  # mongo-data:
  mongo-conf:
  mongo-configdb:
