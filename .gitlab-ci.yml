
stages:
  - build
  - deploy

cache:
  paths:
    - node_modules/


build:
  image: docker:23.0.3
  services:
    - docker:23.0.3-dind
  stage: build
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
  script:
    - docker compose build
    - docker push williamle0001/nhatot-clone:nhatot-backend
  when: manual
    # - docker build -t williamle0001/nhatot-clone:nhatot-backend ./backend

deploy:
  stage: deploy
  before_script:
    - chmod 400 $SSH_KEY
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY root@207.148.126.202 "
      docker login -u $REGISTRY_USER -p $REGISTRY_PASS &&
      docker run -v mysql-data:/var/lib/mysql -v mysql-initdb:/docker-entrypoint-initdb.d/init.sql --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD mysql:8.0 &&
      docker run -v mongo-data:/data/db -v mongo-conf:/etc/mongo -v mongo-configdb:/data/configdb --name mongo -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME -e MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD mongo:6.0 &&
      docker run -v redis-data:/data --name redis -p 6379:6379 redis:7.0-alpine redis-server --save 20 1 --loglevel warning --requirepass $REDIS_PASS &&
      docker run --name nhatot-backend -p 4000:4000 williamle0001/nhatot-clone:nhatot-backend npm run prod"
  environment: production
  when: manual